/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { FeedbackListRelationFilter } from "../../feedback/base/FeedbackListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { MenteeWhereUniqueInput } from "../../mentee/base/MenteeWhereUniqueInput";
import { MentorWhereUniqueInput } from "../../mentor/base/MentorWhereUniqueInput";
import { EnumSessionTypeField } from "./EnumSessionTypeField";

@InputType()
class SessionWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  date?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  duration?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: () => FeedbackListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FeedbackListRelationFilter)
  @IsOptional()
  @Field(() => FeedbackListRelationFilter, {
    nullable: true,
  })
  feedbacks?: FeedbackListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MenteeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MenteeWhereUniqueInput)
  @IsOptional()
  @Field(() => MenteeWhereUniqueInput, {
    nullable: true,
  })
  mentee?: MenteeWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => MentorWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MentorWhereUniqueInput)
  @IsOptional()
  @Field(() => MentorWhereUniqueInput, {
    nullable: true,
  })
  mentor?: MentorWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumSessionTypeField,
  })
  @IsEnum(EnumSessionTypeField)
  @IsOptional()
  @Field(() => EnumSessionTypeField, {
    nullable: true,
  })
  typeField?: "Option1";
}

export { SessionWhereInput as SessionWhereInput };
