/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  IsInt,
  Min,
  Max,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { FeedbackUpdateManyWithoutSessionsInput } from "./FeedbackUpdateManyWithoutSessionsInput";
import { MenteeWhereUniqueInput } from "../../mentee/base/MenteeWhereUniqueInput";
import { MentorWhereUniqueInput } from "../../mentor/base/MentorWhereUniqueInput";
import { EnumSessionTypeField } from "./EnumSessionTypeField";

@InputType()
class SessionUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  date?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  duration?: number | null;

  @ApiProperty({
    required: false,
    type: () => FeedbackUpdateManyWithoutSessionsInput,
  })
  @ValidateNested()
  @Type(() => FeedbackUpdateManyWithoutSessionsInput)
  @IsOptional()
  @Field(() => FeedbackUpdateManyWithoutSessionsInput, {
    nullable: true,
  })
  feedbacks?: FeedbackUpdateManyWithoutSessionsInput;

  @ApiProperty({
    required: false,
    type: () => MenteeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MenteeWhereUniqueInput)
  @IsOptional()
  @Field(() => MenteeWhereUniqueInput, {
    nullable: true,
  })
  mentee?: MenteeWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => MentorWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MentorWhereUniqueInput)
  @IsOptional()
  @Field(() => MentorWhereUniqueInput, {
    nullable: true,
  })
  mentor?: MentorWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    enum: EnumSessionTypeField,
  })
  @IsEnum(EnumSessionTypeField)
  @IsOptional()
  @Field(() => EnumSessionTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;
}

export { SessionUpdateInput as SessionUpdateInput };
